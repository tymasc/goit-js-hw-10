{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst startBtn = document.querySelector('[data-start]');\nconst datetimePicker = document.querySelector('#datetime-picker');\n\nconst refs = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const timeLeft = userSelectedDate - now;\n\n    if (timeLeft <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI(0);\n      datetimePicker.disabled = false;\n      return;\n    }\n\n    updateTimerUI(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const time = convertMs(ms);\n  refs.days.textContent = addLeadingZero(time.days);\n  refs.hours.textContent = addLeadingZero(time.hours);\n  refs.minutes.textContent = addLeadingZero(time.minutes);\n  refs.seconds.textContent = addLeadingZero(time.seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","countdownInterval","startBtn","datetimePicker","refs","options","selectedDates","selected","iziToast","flatpickr","timeLeft","updateTimerUI","ms","time","convertMs","addLeadingZero","value","days","hours","minutes","seconds"],"mappings":"sGAKA,IAAIA,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,cAAc,kBAAkB,EAE1DC,EAAO,CACX,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAF,EAAS,SAAW,GAEpB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDN,EAAS,SAAW,KAEpBF,EAAmBO,EACnBL,EAAS,SAAW,GAEvB,CACH,EAEAO,EAAUN,EAAgBE,CAAO,EAEjCH,EAAS,iBAAiB,QAAS,IAAM,CAClCF,IAELE,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BF,EAAoB,YAAY,IAAM,CAEpC,MAAMS,EAAWV,EADL,IAAI,KAGhB,GAAIU,GAAY,EAAG,CACjB,cAAcT,CAAiB,EAC/BU,EAAc,CAAC,EACfR,EAAe,SAAW,GAC1B,MACD,CAEDQ,EAAcD,CAAQ,CACvB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,MAAMC,EAAOC,EAAUF,CAAE,EACzBR,EAAK,KAAK,YAAcW,EAAeF,EAAK,IAAI,EAChDT,EAAK,MAAM,YAAcW,EAAeF,EAAK,KAAK,EAClDT,EAAK,QAAQ,YAAcW,EAAeF,EAAK,OAAO,EACtDT,EAAK,QAAQ,YAAcW,EAAeF,EAAK,OAAO,CACxD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUF,EAAI,CAMrB,MAAMK,EAAO,KAAK,MAAML,EAAK,KAAG,EAC1BM,EAAQ,KAAK,MAAON,EAAK,MAAO,IAAI,EACpCO,EAAU,KAAK,MAAQP,EAAK,MAAO,KAAQ,GAAM,EACjDQ,EAAU,KAAK,MAASR,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}